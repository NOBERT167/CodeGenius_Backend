@model {{ model_name }}

@{
    ViewBag.Title = "{{ page_name }}DocumentView";
    Layout = "~/Views/Shared/Sitemaster.cshtml";
}

<div class="page-header">
    <div class="row">
        <div class="col-sm-12">
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="#" onclick="{{ page_name }}Link();">{{ page_name }}</a></li>
                <li class="breadcrumb-item active">{{ page_name }} Document('@Model.{{ primary_key.csharp_name if primary_key else 'No' }}')</li>
            </ul>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <div style="text-align:right">
            @if (Model.Status == "Open")
            {
                <button class="action-buttons" onclick="ViewApprovalTrail('@Model.{{ primary_key.csharp_name if primary_key else 'No' }}');">
                    <i class="fas fa-project-diagram menu-icon"></i> Approval Trail
                </button>
                <button class="action-buttons" onclick="SendDocApprovalRequest('@Model.{{ primary_key.csharp_name if primary_key else 'No' }}');">
                    <i class="fas fa-paper-plane" aria-hidden="true"></i> Send Approval Request
                </button>
            }
            else
            {
                <button class="btn btn-danger" onclick="CancelDocApprovalRequest('@Model.{{ primary_key.csharp_name if primary_key else 'No' }}');">
                    <i class="fas fa-times menu-icon"></i> Cancel Approval Request
                </button>
            }
            <button class="action-buttons" onclick="ViewDocComments('@Model.{{ primary_key.csharp_name if primary_key else 'No' }}');">
                <i class="fa fa-list-ol" aria-hidden="true"></i> Comments
            </button>
        </div>
        <hr />

        <div class="row">{% for prop in properties %}
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("{{ prop.display_name }}", htmlAttributes: new { @class = "control-label col-md-12" })
                    @Html.TextBoxFor(m => m.{{ prop.csharp_name }}, new { @class = "form-control", @readonly = "readonly", @style = "background-color:var(--light-gray)" })
                </div>
            </div>{% endfor %}
        </div>

        <div id="div{{ page_name }}Lines">
            <hr style="border:1px solid black" />
            <b>{{ page_name }} Lines</b>
            <hr />
            <div id="divLines"></div>
        </div>
    </div>
</div>

<script src="~/assets/js/ShowProgression.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        Load{{ page_name }}Lines('@Model.{{ primary_key.csharp_name if primary_key else 'No' }}','@Model.Status');
    });

    var Load{{ page_name }}Lines = function (Code, Status) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "GET",
            dataType: "html",
            url: "/{{ page_name }}/{{ page_name }}Lines",
            data: { headerNo: Code, status: Status },
            success: function (data) {
                $("#divLines").html(data);
                HideProgress();
            },
            error: function () {
                HideProgress();
                Swal.fire("There is some problem to process your request. Please try after some time");
            }
        });
    };

    var Add{{ page_name }}Line = function () {
        var docNo = '@Model.{{ primary_key.csharp_name if primary_key else 'No' }}';
        $("#labelF").text("New {{ page_name }} Line");
        ShowProgress();
        $.ajax({
            async: true,
            type: "GET",
            dataType: "html",
            url: '/{{ page_name }}/Add{{ page_name }}Line',
            data: {
                docNo: docNo
            },
            success: function (data) {
                $("#modalBody").html(data);
                HideProgress();
                $("#myModal").modal("show");
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err.responseText, 'warning');
            }
        });
    };

    function Delete{{ page_name }}Line(entryNo) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                var docNo = '@Model.{{ primary_key.csharp_name if primary_key else 'No' }}';
                ShowProgress();
                $.ajax({
                    type: "POST",
                    url: "/{{ page_name }}/Delete{{ page_name }}Line",
                    data: JSON.stringify({
                        code: docNo,
                        lineNo: entryNo
                    }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        HideProgress();
                        if (data.success) {
                            $("#myModal").modal("hide");
                            Swal.fire('Success', data.message, 'success');
                            Load{{ page_name }}Lines('@Model.{{ primary_key.csharp_name if primary_key else 'No' }}', '@Model.Status');
                        } else {
                            Swal.fire('Warning', data.message, 'warning');
                        }
                    },
                    error: function (err) {
                        HideProgress();
                        Swal.fire('Warning', err.responseText, 'warning');
                    }
                });
            }
        });
    }

    var SendDocApprovalRequest = function (Code) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            dataType: "json",
            data: JSON.stringify({ docNo: Code }),
            contentType: "application/json; charset=utf-8",
            processData: false,
            url: '/{{ page_name }}/Submit{{ page_name }}ApprovalRequest',
            success: function (data) {
                HideProgress();
                if (data.success === true) {
                    Swal.fire('Success', data.message, 'success');
                    location.reload();
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err.responseText, 'warning');
            }
        });
    };

    var CancelDocApprovalRequest = function (Code) {
        ShowProgress();
        $.ajax({
            async: true,
            type: "POST",
            dataType: "json",
            data: JSON.stringify({ docNo: Code }),
            contentType: "application/json; charset=utf-8",
            processData: false,
            url: '/{{ page_name }}/Cancel{{ page_name }}ApprovalRequest',
            success: function (data) {
                HideProgress();
                if (data.success === true) {
                    Swal.fire('Success', data.message, 'success');
                    location.reload();
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            },
            error: function (err) {
                HideProgress();
                Swal.fire('Warning', err.responseText, 'warning');
            }
        });
    };
</script>